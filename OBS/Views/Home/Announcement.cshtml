@using OBS.Models
@{
    ViewBag.Title = "Duyurular - ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!-- Content area -->
<div class="d-flex align-items-start flex-column flex-md-row">

    <!-- Left content -->
    <div class="tab-content w-100 overflow-auto order-2 order-md-1">

        <div class="tab-pane fade active show" id="activity">
            @if (Session["roleName"].ToString() == "Admin" || Session["roleName"].ToString() == "Teacher")
            {

                <div class="card">
                    <div class="card-header header-elements-sm-inline">
                        <button id="add" type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal"><i class="icon-plus-circle2"></i> Yeni Duyuru Ekle</button>
                    </div>

                    <!-- Vertical form modal -->
                    <div id="myModal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="true" style="z-index: 1050; display: none;" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Yeni Duyuru Ekle</h5>
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                </div>
                                <form id="form">
                                    <div class="modal-body">
                                        <input type="text" id="ID" hidden="" class="form-control">
                                        <div class="form-group">
                                            <label>Duyuru Başlığı</label>
                                            <input type="text" id="title" class="form-control" placeholder="Başlık" required>
                                        </div>
                                        <div class="form-group">
                                            <label>Duyuru İçeriği</label>
                                            <textarea id="summernote" name="editordata" required></textarea>
                                        </div>
                                        <div class="form-group row">
                                            @if (Session["roleName"].ToString() == "Admin")
                                            {

                                                <div class="col-md-6">
                                                    <div class="form-check form-check-switch form-check-switch-left">
                                                        <label id="schk" class="form-check-label">
                                                            <input type="checkbox" data-toggle="toggle" id="chkGenel" data-on="Evet" checked="checked" disabled="disabled" data-off="Hayır">
                                                            Duyuru genel mi olacak?
                                                        </label>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="col-md-6">
                                                    <div class="form-check form-check-switch form-check-switch-left">
                                                        <label id="schk" class="form-check-label">
                                                            <input type="checkbox" data-toggle="toggle" id="chkOgrenci" data-on="Evet" data-off="Hayır">
                                                            Öğrenciye özel duyuru mu?
                                                        </label>
                                                    </div>
                                                    <div id="ogrenciSelect2">
                                                        <label>Öğrencinizi Seçin</label>
                                                        <select id="StudentId" class="form-control select-fixed-single"></select>
                                                    </div>
                                                </div>
                                            }

                                        </div>
                                        @if (Session["roleName"].ToString() == "Teacher")
                                        {
                                            <div id="checkSinif" class="form-group row">
                                                <div class="col-md-6">
                                                    <div class="form-check form-check-switch form-check-switch-left">
                                                        <label id="schk" class="form-check-label">
                                                            <input type="checkbox" data-toggle="toggle" id="chkSinif" data-on="Evet" data-off="Hayır">
                                                            Sınıf için mi olacak?
                                                        </label>
                                                    </div>
                                                    <div id="sinifSelect2">
                                                        <label>Sınıfı Seç</label>
                                                        <select id="ClassId" class="form-control select-fixed-single"></select>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-check form-check-switch form-check-switch-left">
                                                        <label id="schk" class="form-check-label">
                                                            <input type="checkbox" data-toggle="toggle" id="chkDers" data-on="Evet" data-off="Hayır">
                                                            Ders için mi olacak?
                                                        </label>
                                                    </div>
                                                    <div id="dersSelect2">
                                                        <label>Dersi Seç</label>
                                                        <select id="LessonId" class="form-control select-fixed-single"></select>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                                        <button type="submit" class="btn btn-primary">Kaydet <i class="icon-database-check ml-2"></i></button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- /vertical form modal -->
                </div>
            }

           

                <div class="card">
                    <div class="card-header">
                        @if (Session["roleName"].ToString() == "Student")
                        {
                        <button id="allDisplay" type="button" class="btn btn-primary"><i class="icon-megaphone"></i> &nbsp; Hepsini Göster</button>

                            <button id="allClass" type="button" class="btn btn-success pull-right">Sınıf &nbsp;  <i class="icon-pencil6"></i> </button>
                            <button id="allLesson" type="button" class="btn btn-default bg-indigo">Ders &nbsp;  <i class="icon-books"></i> </button>
                            <button id="allStudent" type="button" class="btn btn-default bg-indigo">Bana Özel &nbsp;  <i class="icon-user"></i> </button>
                        }
                        @if (Session["roleName"].ToString() == "Teacher")
                        {
                            <h5>Eklediklerim</h5>
                        }
                    </div>

                </div>
           



            <!-- Timeline -->
            <div class="timeline timeline-left">
                <div class="timeline-container">
                    <div id="duyurular">

                    </div>
                </div>
            </div>
            <!-- /timeline -->

        </div>

    </div>
    <!-- /left content -->
    <!-- Right sidebar component -->
    <div class="sidebar sidebar-light bg-transparent sidebar-component sidebar-component-right wmin-300 border-0 shadow-0 order-1 order-md-2 sidebar-expand-md">

        <!-- Sidebar content -->
        <div class="sidebar-content">

            <!-- User card -->
            <div class="card">
                <div class="card-body text-center">
                    <div class="card-img-actions d-inline-block mb-3">
                        <img class="img-fluid rounded-circle" src="~/Uploads/@Session["picture"]" width="170" height="170" alt="">
                    </div>

                    <h6 class="font-weight-semibold mb-0">@Session["userName"]</h6>

                    <hr />
                    <span class="d-block text-muted">
                        @{
                            OBSEntities _db = new OBSEntities();
                            if (Session["roleName"].ToString() == "Admin")
                            {
                                <span class="badge badge-light badge-striped badge-striped-left border-left-warning-800 d-block font-size-base"> Müdür </span>

                            }
                            else if (Session["roleName"].ToString() == "Teacher")
                            {
                                <span class="badge badge-light badge-striped badge-striped-left border-left-success d-block font-size-base"> Öğretmen </span>
                            }
                            else if (Session["roleName"].ToString() == "Student")
                            {
                                int userId = Convert.ToInt32(Session["userId"]);
                                var user = _db.Users.FirstOrDefault(x => x.ID == userId);
                                <span class="badge badge-light badge-striped badge-striped-left border-left-success d-block font-size-base mb-1"> Sınıf: @Session["className"].ToString()</span>

                                if (user != null)
                                {
                                    var userFind = _db.Students.FirstOrDefault(x => x.ID == user.StudentId);
                                    if (userFind != null)
                                    {
                                        <span class="badge badge-light badge-striped badge-striped-left border-left-success d-block font-size-base mb-1">TC Kimlik Numarası: @userFind.TCNumber</span>
                                        <span class="badge badge-light badge-striped badge-striped-left border-left-success d-block font-size-base mb-1">Öğrenci Numarası: @userFind.StudentNumber</span>
                                        <span class="badge badge-light badge-striped badge-striped-left border-left-success d-block font-size-base mb-1">
                                            Doğum Tarihi: @($"{userFind.Birthday:dd/MM/yyyy}")
                                        </span>
                                    }
                                }
                            }
                        }
                    </span>


                </div>
            </div>
            <!-- /user card -->


        </div>
        <!-- /sidebar content -->

    </div>
    <!-- /right sidebar component -->

</div>

<!-- /content area -->

@section scripts{


    <link href="~/Content/assets/css/bootstrap-toggle.min.css" rel="stylesheet" />
    <script src="~/Content/assets/js/bootstrap-toggle.min.js"></script>

    <!-- include summernote css/js -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/lang/summernote-tr-TR.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {


            $('#myModal').on('shown.bs.modal',
                function() {
                    $('#summernote').summernote({
                        tabsize: 2,
                        height: 100,
                        lang: 'tr-TR',
                        toolbar: [
                            ['style', ['bold', 'italic', 'underline', 'clear']],
                            ['font', ['strikethrough', 'superscript', 'subscript']],
                            ['fontsize', ['fontsize']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['height', ['height']]
                        ]
                    });
                });

            function formClear() {
                $("#form")[0].reset();
                $('#chkSinif').prop('checked', false).change();
                $('#chkOgrenci').prop('checked', true).change();
                $("#ogrenciSelect2").show();

                $("#sinifSelect2").hide();
                $("#dersSelect2").hide();

            };

            $("#add").click(function() {
                formClear();
            });

            $("#allDisplay").click(function () {
                $("#announcementStudent").show().addClass('animated fadeInUp');
                $("#announcementClass").show().addClass('animated fadeInUp');
                $("#announcementAll").show().addClass('animated fadeInUp');
                $("#announcementLesson").show().addClass('animated fadeInUp');
            });

            $("#allStudent").click(function () {
                $("#announcementStudent").removeClass('animated fadeInUp');
                $("#announcementStudent").show().addClass('animated fadeInUp');
                $("#announcementClass").hide();
                $("#announcementAll").hide();
                $("#announcementLesson").hide();
            });
            $("#allLesson").click(function () {
                $("#announcementLesson").removeClass('animated fadeInUp');
                $("#announcementLesson").show().addClass('animated fadeInUp');
                $("#announcementClass").hide();
                $("#announcementAll").hide();
                $("#announcementStudent").hide();
            });
            $("#allClass").click(function () {
                $("#announcementClass").removeClass('animated fadeInUp');
                $("#announcementClass").show().addClass('animated fadeInUp');
                $("#announcementLesson").hide();
                $("#announcementAll").hide();
                $("#announcementStudent").hide();
            });

            $.select2Ajax.VeriCek("#ClassId", "/json/select2/teachers/class/" + @Session["userId"]);
            $.select2Ajax.VeriCek("#StudentId", "/json/select2/teachers/class/student/" + @Session["userId"]);

            $('#ClassId').change('select2:selecting',
                function(e) {
                    $.select2Ajax.VeriCek("#LessonId", "/json/select2/class/" + $("#ClassId option:selected").val());
                });


            $('#chkGenel').change(function() {
                if (this.checked) {
                    $("#checkSinif").hide();
                    $('#chkSinif').prop('checked', false).change();
                    $('#chkDers').prop('checked', false).change();
                    $("#ClassId").val(null).trigger('change');
                    $("#LessonId").val(null).trigger('change');
                    $("#StudentId").val(null).trigger('change');
                } else {
                    $("#ClassId").val(null).trigger('change');
                    $("#LessonId").val(null).trigger('change');
                    $("#StudentId").val(null).trigger('change');
                }
            });

            $('#chkOgrenci').change(function() {
                if (this.checked) {
                    $("#checkSinif").hide();
                    $("#ogrenciSelect2").show();
                    $('#chkSinif').prop('checked', false).change();
                    $('#chkDers').prop('checked', false).change();
                    $("#ClassId").val(null).trigger('change');
                    $("#LessonId").val(null).trigger('change');
                } else {
                    $("#StudentId").val(null).trigger('change');
                    $("#checkSinif").show();
                    $("#ogrenciSelect2").hide();
                }
            });

            $('#chkSinif').change(function() {
                if (this.checked) {
                    $("#sinifSelect2").show();
                } else {
                    $("#sinifSelect2").hide();
                    $("#ClassId").val(null).trigger('change');
                }
            });

            $('#chkDers').change(function() {
                if (this.checked) {
                    $("#dersSelect2").show();
                } else {
                    $("#dersSelect2").hide();
                    $("#LessonId").val(null).trigger('change');
                }
            });


            $("form").submit(function(e) {
                e.preventDefault();

                var data = new Object();

                if ($('#ID').val().length >= 1) {
                    data.ID = $('#ID').val();
                }
                data.Title = $('#title').val();
                data.Description = $('#summernote').summernote('code');
                data.AllUser = $("#chkGenel").prop('checked');
                if ($("#chkOgrenci").prop('checked') === true) {
                    data.StudentId = $("#StudentId").val();
                }
                if ($("#chkDers").prop('checked') === true) {
                    data.LessonId = $("#LessonId").val();
                }
                if ($("#chkSinif").prop('checked') === true) {
                    data.ClassId = $("#ClassId").val();
                }
                $.ajax({
                    type: "POST",
                    url: "/announcement/add",
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(response) {
                        if (response === "Success") {
                            $.iziToast.Success();
                            $("#myModal").modal('hide');
                        } else if (response === "Update") {
                            $.iziToast.Success();
                            $("#examples").DataTable().ajax.reload();
                            $("#myModal").modal('hide');
                        } else if (response === "Mail Kayıtlı") {
                            $.iziToast.Info("Girilen mail adresi daha önce sisteme kaydedilmiştir.");
                        } else {
                            $.iziToast.Warning();
                            alert(response);
                        }
                    },
                    failure: function(response) {
                        alert(response.responseText);
                    },
                    error: function(response) {
                        alert(response.responseText);
                    }
                });
            });


            var announcement = '<div id="duyuruTipi" class="timeline-row">' +
                '<div class="timeline-icon">' +
                '<div class="arkaplanClass">' +
                '<i class="timelineIcon"></i>' +
                '</div>' +
                '</div>' +
                '' +
                '<div class="card">' +
                '<div class="card-header header-elements-sm-inline">' +
                '<h6 class="card-title">Baslik:</h6>' +
                '<div class="header-elements">' +
                '<span><i class="icon-database-time2 mr-2 text-success"></i>Tarih:</span>' +
                '</div>' +
                '</div>' +
                '' +
                '<div class="card-body">' +
                '<blockquote class="blockquote blockquote-bordered py-2 pl-3 mb-0">' +
                '<p class="mb-2 font-size-base">Aciklama:</p>' +
                '<footer class="blockquote-footer">Paylasan:</footer>' +
                '</blockquote>' +
                '</div>' +
                '<div class="card-footer d-sm-flex justify-content-sm-between align-items-sm-center">' +
                '<span>' +
                '<span class="badge badge-mark border-danger mr-2"></span>' +
                '<span class="font-weight-semibold">Tipi:</span>' +
                '</span>' +
                '</div>' +
                '</div>' +
                '</div>';
          

            var list = [];
            $('body').loading({
                stoppable: true,
                message: 'Duyurular yükleniyor...'
            });
            $.getJSON('/json/announcement/' + @Session["userId"],
                function (json) {
                   $.each(json,
                        function(i, value) {
                            for (var j = 0; j < value.length; j++) {
                                var res;
                                if (value[j].AllUser === true) {
                                    res = announcement.replace("Baslik:", value[j].Title);
                                    res = res.replace("duyuruTipi", "announcementAll");
                                    res = res.replace("Aciklama:", value[j].Description);
                                    res = res.replace("Tarih:", new Date(parseInt(value[j].Date.substr(6))).format("dd.mm.yyyy  HH:MM"));
                                    res = res.replace("Tipi:", "Genel Duyuru");
                                    res = res.replace("Paylasan:", "UMUT BABA");
                                    res = res.replace("arkaplanClass", "bg-warning-400");
                                    res = res.replace("timelineIcon", "icon-megaphone");
                                    list.push(res);
                                } else if (value[j].StudentId !== null) {
                                    res = announcement.replace("Baslik:", value[j].Title);
                                    res = res.replace("duyuruTipi", "announcementStudent");
                                    res = res.replace("Aciklama:", value[j].Description);
                                    res = res.replace("Tarih:", new Date(parseInt(value[j].Date.substr(6))).format("dd.mm.yyyy  HH:MM"));
                                    res = res.replace("Tipi:", "Öğrenci Duyurusu");
                                    res = res.replace("Paylasan:", "UMUT BABA");
                                    res = res.replace("arkaplanClass", "bg-orange-400");
                                    res = res.replace("timelineIcon", "icon-user");
                                    list.push(res);
                                } else if (value[j].ClassId !== null && value[j].LessonId === null) {
                                    res = announcement.replace("Baslik:", value[j].Title);
                                    res = res.replace("duyuruTipi", "announcementClass");
                                    res = res.replace("Aciklama:", value[j].Description);
                                    res = res.replace("Tarih:", new Date(parseInt(value[j].Date.substr(6))).format("dd.mm.yyyy  HH:MM"));
                                    res = res.replace("Tipi:", "Sınıf Duyurusu");
                                    res = res.replace("Paylasan:", "UMUT BABA");
                                    res = res.replace("arkaplanClass", "bg-blue-400");
                                    res = res.replace("timelineIcon", "icon-pencil");
                                    list.push(res);
                                } else if (value[j].ClassId !== null && value[j].LessonId !== null) {
                                    res = announcement.replace("Baslik:", value[j].Title);
                                    res = res.replace("duyuruTipi", "announcementLesson");
                                    res = res.replace("Aciklama:", value[j].Description);
                                    res = res.replace("Tarih:", new Date(parseInt(value[j].Date.substr(6))).format("dd.mm.yyyy  HH:MM"));
                                    res = res.replace("Tipi:", "Ders Duyurusu");
                                    res = res.replace("Paylasan:", "UMUT BABA");
                                    res = res.replace("arkaplanClass", "bg-indigo-400");
                                    res = res.replace("timelineIcon", "icon-books");
                                    list.push(res);
                                }
                            }
                        });
                    document.getElementById('duyurular').innerHTML = list.join("");
                    $('body').loading('stop');
                });

            //$("#adminTools").hide();
            var role = "@Session["roleName"]";

            if (role === "Admin") {
                $("#adminTools").show();
            }
        });
    </script>

}